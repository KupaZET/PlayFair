# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PlayFair.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(615, 688)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 611, 661))
        self.tabWidget.setObjectName("tabWidget")
        self.Sifrovani = QtWidgets.QWidget()
        self.Sifrovani.setObjectName("Sifrovani")
        self.zasifruj = QtWidgets.QPushButton(self.Sifrovani)
        self.zasifruj.setGeometry(QtCore.QRect(480, 280, 93, 28))
        self.zasifruj.setObjectName("zasifruj")
        self.scrollArea = QtWidgets.QScrollArea(self.Sifrovani)
        self.scrollArea.setGeometry(QtCore.QRect(20, 340, 571, 281))
        self.scrollArea.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.ObsahScrollAr = QtWidgets.QWidget()
        self.ObsahScrollAr.setGeometry(QtCore.QRect(0, 0, 569, 279))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ObsahScrollAr.sizePolicy().hasHeightForWidth())
        self.ObsahScrollAr.setSizePolicy(sizePolicy)
        self.ObsahScrollAr.setObjectName("ObsahScrollAr")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.ObsahScrollAr)
        self.verticalLayout.setObjectName("verticalLayout")
        self.ZasifText = QtWidgets.QLabel(self.ObsahScrollAr)
        self.ZasifText.setText("")
        self.ZasifText.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.ZasifText.setWordWrap(True)
        self.ZasifText.setObjectName("ZasifText")
        self.verticalLayout.addWidget(self.ZasifText)
        self.scrollArea.setWidget(self.ObsahScrollAr)
        self.SifText = QtWidgets.QTextEdit(self.Sifrovani)
        self.SifText.setGeometry(QtCore.QRect(20, 30, 561, 181))
        self.SifText.setObjectName("SifText")
        self.klicSif = QtWidgets.QLineEdit(self.Sifrovani)
        self.klicSif.setGeometry(QtCore.QRect(20, 250, 371, 22))
        self.klicSif.setObjectName("klicSif")
        self.CZSIF = QtWidgets.QRadioButton(self.Sifrovani)
        self.CZSIF.setGeometry(QtCore.QRect(410, 250, 95, 20))
        self.CZSIF.setObjectName("CZSIF")
        self.ENSIF = QtWidgets.QRadioButton(self.Sifrovani)
        self.ENSIF.setGeometry(QtCore.QRect(480, 250, 95, 20))
        self.ENSIF.setObjectName("ENSIF")
        self.POPIS03 = QtWidgets.QLabel(self.Sifrovani)
        self.POPIS03.setGeometry(QtCore.QRect(20, 310, 141, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.POPIS03.setFont(font)
        self.POPIS03.setObjectName("POPIS03")
        self.POPIS02 = QtWidgets.QLabel(self.Sifrovani)
        self.POPIS02.setGeometry(QtCore.QRect(20, 230, 55, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.POPIS02.setFont(font)
        self.POPIS02.setObjectName("POPIS02")
        self.POPIS01 = QtWidgets.QLabel(self.Sifrovani)
        self.POPIS01.setGeometry(QtCore.QRect(20, 10, 291, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.POPIS01.setFont(font)
        self.POPIS01.setObjectName("POPIS01")
        self.tabWidget.addTab(self.Sifrovani, "")
        self.Desifruj = QtWidgets.QWidget()
        self.Desifruj.setObjectName("Desifruj")
        self.ENDEF = QtWidgets.QRadioButton(self.Desifruj)
        self.ENDEF.setGeometry(QtCore.QRect(480, 250, 95, 20))
        self.ENDEF.setObjectName("ENDEF")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.Desifruj)
        self.scrollArea_2.setGeometry(QtCore.QRect(20, 340, 571, 281))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scrollArea_2.sizePolicy().hasHeightForWidth())
        self.scrollArea_2.setSizePolicy(sizePolicy)
        self.scrollArea_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.scrollArea_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.scrollArea_2.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.ObsahScrollAr_2 = QtWidgets.QWidget()
        self.ObsahScrollAr_2.setGeometry(QtCore.QRect(0, 0, 569, 279))
        self.ObsahScrollAr_2.setObjectName("ObsahScrollAr_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.ObsahScrollAr_2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.DESTEXT = QtWidgets.QLabel(self.ObsahScrollAr_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DESTEXT.sizePolicy().hasHeightForWidth())
        self.DESTEXT.setSizePolicy(sizePolicy)
        self.DESTEXT.setAutoFillBackground(False)
        self.DESTEXT.setText("")
        self.DESTEXT.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.DESTEXT.setWordWrap(True)
        self.DESTEXT.setObjectName("DESTEXT")
        self.verticalLayout_2.addWidget(self.DESTEXT)
        self.scrollArea_2.setWidget(self.ObsahScrollAr_2)
        self.DESIFRUJ = QtWidgets.QPushButton(self.Desifruj)
        self.DESIFRUJ.setGeometry(QtCore.QRect(480, 280, 93, 28))
        self.DESIFRUJ.setObjectName("DESIFRUJ")
        self.CZDEGF = QtWidgets.QRadioButton(self.Desifruj)
        self.CZDEGF.setGeometry(QtCore.QRect(410, 250, 95, 20))
        self.CZDEGF.setObjectName("CZDEGF")
        self.POPIS003 = QtWidgets.QLabel(self.Desifruj)
        self.POPIS003.setGeometry(QtCore.QRect(20, 310, 141, 31))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.POPIS003.setFont(font)
        self.POPIS003.setObjectName("POPIS003")
        self.POPIS001 = QtWidgets.QLabel(self.Desifruj)
        self.POPIS001.setGeometry(QtCore.QRect(20, 10, 291, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.POPIS001.setFont(font)
        self.POPIS001.setObjectName("POPIS001")
        self.POPIS004 = QtWidgets.QLabel(self.Desifruj)
        self.POPIS004.setGeometry(QtCore.QRect(20, 230, 55, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.POPIS004.setFont(font)
        self.POPIS004.setObjectName("POPIS004")
        self.DesifText = QtWidgets.QTextEdit(self.Desifruj)
        self.DesifText.setGeometry(QtCore.QRect(20, 30, 561, 181))
        self.DesifText.setObjectName("DesifText")
        self.KlicDes = QtWidgets.QLineEdit(self.Desifruj)
        self.KlicDes.setGeometry(QtCore.QRect(20, 250, 371, 22))
        self.KlicDes.setObjectName("KlicDes")
        self.tabWidget.addTab(self.Desifruj, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.CZSIF.setChecked(True)
        self.CZDEGF.setChecked(True)

        self.DESTEXT.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.ZasifText.setTextInteractionFlags(Qt.TextSelectableByMouse)

        self.SifText.setTabChangesFocus(True)
        self.DesifText.setTabChangesFocus(True)

        QWidget.setTabOrder(self.SifText, self.klicSif)
        QWidget.setTabOrder(self.klicSif, self.CZSIF)
        QWidget.setTabOrder(self.CZSIF, self.CZDEGF)
        QWidget.setTabOrder(self.CZDEGF, self.ENSIF)
        QWidget.setTabOrder(self.ENSIF, self.zasifruj)
        QWidget.setTabOrder(self.zasifruj, self.SifText)

        QWidget.setTabOrder(self.DesifText, self.KlicDes)
        QWidget.setTabOrder(self.KlicDes, self.CZDEGF)
        QWidget.setTabOrder(self.CZDEGF, self.ENDEF)
        QWidget.setTabOrder(self.ENDEF, self.Desifruj)
        QWidget.setTabOrder(self.Desifruj, self.DesifText)

        self.zasifruj.clicked.connect(self.click_Sifrovani)
        self.DESIFRUJ.clicked.connect(self.click_Desifrovani)

    def click_Sifrovani(self):
        self.ZasifText.setText("")
        klic = self.klicSif.text()
        klic = klic.upper()
        sif_Text = self.SifText.toPlainText()
        sif_Text = sif_Text.upper()
        CZ = False
        abecedEN = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
        abecedCZ = "ABCDEFGHIJKLMNOPRSTUVWXYZ"

        sif_number = []
        vys_sif_text = []
        tabulka = [["0" for i in range(5)] for j in range(5)]

        if len(sif_Text) <= 0:
            self.show_popUpEmpty()
            return

        if len(klic) <= 0:
            self.show_popUpEmpty()
            return

        #Volba jazyka a nahrazeni znaku
        if self.CZSIF.isChecked():
            CZ = True
        else:
            CZ = False

        sif_Text = sif_Text.replace("Ě", "E")
        sif_Text = sif_Text.replace("Š", "S")
        sif_Text = sif_Text.replace("Č", "C")
        sif_Text = sif_Text.replace("Ř", "R")
        sif_Text = sif_Text.replace("Ž", "Z")
        sif_Text = sif_Text.replace("Ý", "Y")
        sif_Text = sif_Text.replace("Á", "A")
        sif_Text = sif_Text.replace("Í", "I")
        sif_Text = sif_Text.replace("É", "E")
        sif_Text = sif_Text.replace("Ť", "T")
        sif_Text = sif_Text.replace("Ď", "D")
        sif_Text = sif_Text.replace("Ú", "U")
        sif_Text = sif_Text.replace("Ů", "U")

        if CZ:
            sif_Text = sif_Text.replace("Q", "O")
        else:
            sif_Text = sif_Text.replace("J", "I")

        klic = klic.replace("Ě", "E")
        klic = klic.replace("Š", "S")
        klic = klic.replace("Č", "C")
        klic = klic.replace("Ř", "R")
        klic = klic.replace("Ž", "Z")
        klic = klic.replace("Ý", "Y")
        klic = klic.replace("Á", "A")
        klic = klic.replace("Í", "I")
        klic = klic.replace("É", "E")
        klic = klic.replace("Ť", "T")
        klic = klic.replace("Ď", "D")
        klic = klic.replace("Ú", "U")
        klic = klic.replace("Ů", "U")

        if CZ == True:
            klic = klic.replace("Q", "O")
        else:
            klic = klic.replace("J", "I")

        ####################upravy textu a klice#############################
        upravenyText = []
        upravenyKlic = []
        upravenyTextSMezery = []
        self.ZasifText.setText("Speciální znaky, které byly odstraněny: ")

        for x in range(0, len(sif_Text)):

            if 65 <= ord(sif_Text[x]) <= 90 and 65 <= ord(sif_Text[x]) <= 90:

                if x == (len(sif_Text) - 1):
                    upravenyTextSMezery.append(sif_Text[x])
                    upravenyText.append(sif_Text[x])

                else:
                    if sif_Text[x] != sif_Text[x + 1]:
                        upravenyTextSMezery.append(sif_Text[x])
                        upravenyText.append(sif_Text[x])

                    else:
                        if CZ:
                            if x != "X":
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("X")
                            else:
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("W")
                        else:
                            if x != "X":
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("X")
                            else:
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("Q")

            elif sif_Text[x].isdigit():
                upravenyTextSMezery.append(sif_Text[x])

            elif sif_Text[x] == ' ':
                upravenyTextSMezery.append(' ')
            else:
                self.ZasifText.setText(self.ZasifText.text() + sif_Text[x])

        self.ZasifText.setText(self.ZasifText.text() + "\n" + "Speciální znaky, které byly odstraněny z klice: ")
        for x in range(0, len(klic)):

            if klic[x] in upravenyKlic:
                continue

            elif 65 <= ord(klic[x]) <= 90:
                upravenyKlic.append(klic[x])

            elif 48 <= ord(klic[x]) <= 57:
                upravenyKlic.append(klic[x])

            else:
                self.ZasifText.setText(self.ZasifText.text() + klic[x])

        ##############Kontrola sudosti delky####################
        if len(upravenyText) % 2 != 0:
            if CZ:
                if upravenyText[len(upravenyText) - 1] != "X":
                    upravenyText.append("X")
                else:
                    upravenyText.append("W")
            else:
                if upravenyText[len(upravenyText) - 1] != "X":
                    upravenyText.append("X")
                else:
                    upravenyText.append("Q")

        i = 0
        j = 0
        ###########uprava abecedy########
        upravenaAbeceda = []

        if CZ:
            for x in abecedCZ:
                if x in upravenyKlic:
                    continue
                else:
                    upravenaAbeceda.append(x)
        else:
            for x in abecedEN:
                if x in upravenyKlic:
                    continue
                else:
                    upravenaAbeceda.append(x)

        ###########vytvoreni sif matice###################
        for x in range(0, 5):
            for y in range(0, 5):
                if i < len(upravenyKlic):
                    tabulka[x][y] = upravenyKlic[i]
                    i += 1
                else:
                    if CZ:
                        tabulka[x][y] = upravenaAbeceda[j]
                        j += 1
                    else:
                        tabulka[x][y] = upravenaAbeceda[j]
                        j += 1

        j = 0
        #######vypsani matice###########
        self.ZasifText.setText(self.ZasifText.text() + "\nTABULKA:\n")
        for x in range(0, 5):
            for y in range(0, 5):
                if j < 4:
                    self.ZasifText.setText(self.ZasifText.text() + "|" + tabulka[x][y])
                    j += 1
                elif j == 4:
                    self.ZasifText.setText(self.ZasifText.text() + "|" + tabulka[x][y] + "|\n")
                    j = 0

        ############sifrovani##########
        i = 0
        while i < len(upravenyText):
            index1 = []
            index2 = []

            if upravenyText[i].isdigit() == False and upravenyText[i].isdigit() == False:
                for p in range(0, 5):
                    for o in range(0, 5):
                        if tabulka[p][o] == upravenyText[i]:
                            index1.append(p)
                            index1.append(o)

                        elif tabulka[p][o] == upravenyText[i + 1]:
                            index2.append(p)
                            index2.append(o)

                if index1[1] == index2[1]:
                    vys_sif_text.append(tabulka[(index1[0] + 1) % 5][index1[1]])
                    vys_sif_text.append(tabulka[(index2[0] + 1) % 5][index2[1]])
                elif index1[0] == index2[0]:
                    vys_sif_text.append(tabulka[index1[0]][(index1[1] + 1) % 5])
                    vys_sif_text.append(tabulka[index2[0]][(index2[1] + 1) % 5])
                else:
                    vys_sif_text.append(tabulka[index1[0]][index2[1]])
                    vys_sif_text.append(tabulka[index2[0]][index1[1]])

                i += 2

        #####doplneni mezer a cislic a vypsani zasif textu######
        j = 0
        for x in range(0, len(upravenyTextSMezery)):
            if upravenyTextSMezery[x] == ' ':
                vys_sif_text.insert(x, 'XMEZERAX')
            elif upravenyTextSMezery[x].isdigit():
                vys_sif_text.insert(x, upravenyTextSMezery[x])

        self.ZasifText.setText(self.ZasifText.text() + "\n" + "Upraveny text: ")
        for x in range(0, len(upravenyTextSMezery)):
            self.ZasifText.setText(self.ZasifText.text() + upravenyTextSMezery[x])

        self.ZasifText.setText(self.ZasifText.text() + "\n" + "Upraveny klic: ")
        for x in range(0, len(upravenyKlic)):
            self.ZasifText.setText(self.ZasifText.text() + upravenyKlic[x])

        self.ZasifText.setText(self.ZasifText.text() + "\n\nZasifrovany text:")
        for x in vys_sif_text:
            if j < 4:
                self.ZasifText.setText(self.ZasifText.text() + x)
                j += 1
            elif j == 4:
                self.ZasifText.setText(self.ZasifText.text() + x + " ")
                j = 0

    def click_Desifrovani(self):
        self.DESTEXT.setText("")
        klic = self.KlicDes.text()
        klic = klic.upper()
        sif_Text = self.DesifText.toPlainText()
        sif_Text = sif_Text.upper()
        CZ = False
        abecedEN = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
        abecedCZ = "ABCDEFGHIJKLMNOPRSTUVWXYZ"

        sif_number = []
        vys_sif_text = []
        tabulka = [["0" for i in range(5)] for j in range(5)]

        if len(sif_Text) <= 0:
            self.show_popUpEmpty()
            return

        if len(klic) <= 0:
            self.show_popUpEmpty()
            return

        ###volba jazyka a nahrazeni znaku##
        if self.CZDEGF.isChecked():
            CZ = True
        else:
            CZ = False

        sif_Text = sif_Text.replace("Ě", "E")
        sif_Text = sif_Text.replace("Š", "S")
        sif_Text = sif_Text.replace("Č", "C")
        sif_Text = sif_Text.replace("Ř", "R")
        sif_Text = sif_Text.replace("Ž", "Z")
        sif_Text = sif_Text.replace("Ý", "Y")
        sif_Text = sif_Text.replace("Á", "A")
        sif_Text = sif_Text.replace("Í", "I")
        sif_Text = sif_Text.replace("É", "E")
        sif_Text = sif_Text.replace("Ť", "T")
        sif_Text = sif_Text.replace("Ď", "D")
        sif_Text = sif_Text.replace("Ú", "U")
        sif_Text = sif_Text.replace("Ů", "U")
        sif_Text = sif_Text.replace('XMEZERAX', '§')
        if CZ:
            sif_Text = sif_Text.replace("Q", "O")
        else:
            sif_Text = sif_Text.replace("J", "I")

        klic = klic.replace("Ě", "E")
        klic = klic.replace("Š", "S")
        klic = klic.replace("Č", "C")
        klic = klic.replace("Ř", "R")
        klic = klic.replace("Ž", "Z")
        klic = klic.replace("Ý", "Y")
        klic = klic.replace("Á", "A")
        klic = klic.replace("Í", "I")
        klic = klic.replace("É", "E")
        klic = klic.replace("Ť", "T")
        klic = klic.replace("Ď", "D")
        klic = klic.replace("Ú", "U")
        klic = klic.replace("Ů", "U")

        if CZ == True:
            klic = klic.replace("Q", "O")
        else:
            klic = klic.replace("J", "I")

        #####konecna uprava textu####
        upravenyText = []
        upravenyKlic = []
        upravenyTextSMezery = []
        self.DESTEXT.setText("Speciální znaky, které byly odstraněny: ")

        for x in range(0, len(sif_Text)):

            if 65 <= ord(sif_Text[x]) <= 90:

                if x == (len(sif_Text) - 1):
                    upravenyTextSMezery.append(sif_Text[x])
                    upravenyText.append(sif_Text[x])

                else:
                    if sif_Text[x] != sif_Text[x + 1]:
                        upravenyTextSMezery.append(sif_Text[x])
                        upravenyText.append(sif_Text[x])

                    else:
                        if CZ:
                            if x != "X":
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("X")
                            else:
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("W")
                        else:
                            if x != "X":
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("X")
                            else:
                                upravenyTextSMezery.append(sif_Text[x])
                                upravenyText.append(sif_Text[x])
                                upravenyText.append("Q")

            elif sif_Text[x].isdigit():
                upravenyTextSMezery.append(sif_Text[x])

            elif sif_Text[x] == '§':
                upravenyTextSMezery.append(' ')
            else:
                self.DESTEXT.setText(self.DESTEXT.text() + sif_Text[x])

        self.DESTEXT.setText(self.DESTEXT.text() + "\n" + "Speciální znaky, které byly odstraněny z klice: ")
        for x in range(0, len(klic)):

            if klic[x] in upravenyKlic:
                continue

            elif 65 <= ord(klic[x]) <= 90:
                upravenyKlic.append(klic[x])

            else:
                self.DESTEXT.setText(self.DESTEXT.text() + klic[x])

        ###kontrola sudosti###
        if len(upravenyText) % 2 != 0:
            if CZ:
                if upravenyText[len(upravenyText) - 1] != "X":
                    upravenyText.append("X")
                else:
                    upravenyText.append("W")
            else:
                if upravenyText[len(upravenyText) - 1] != "X":
                    upravenyText.append("X")
                else:
                    upravenyText.append("Q")

        ##uprava abecedy a naplneni tabulky#
        i = 0
        j = 0
        upravenaAbeceda = []

        if CZ:
            for x in abecedCZ:
                if x in upravenyKlic:
                    continue
                else:
                    upravenaAbeceda.append(x)
        else:
            for x in abecedEN:
                if x in upravenyKlic:
                    continue
                else:
                    upravenaAbeceda.append(x)

        for x in range(0, 5):
            for y in range(0, 5):
                if i < len(upravenyKlic):
                    tabulka[x][y] = upravenyKlic[i]
                    i += 1
                else:
                    if CZ:
                        tabulka[x][y] = upravenaAbeceda[j]
                        j += 1
                    else:
                        tabulka[x][y] = upravenaAbeceda[j]
                        j += 1

        #######vypsani tabulky########
        j = 0
        self.DESTEXT.setText(self.DESTEXT.text() + "\nTABULKA:\n")
        for x in range(0, 5):
            for y in range(0, 5):
                if j < 4:
                    self.DESTEXT.setText(self.DESTEXT.text() + "|" + tabulka[x][y])
                    j += 1
                elif j == 4:
                    self.DESTEXT.setText(self.DESTEXT.text() + "|" + tabulka[x][y] + "|\n")
                    j = 0

        #########Desifrovani#################
        i = 0
        while i < len(upravenyText):
            index1 = []
            index2 = []

            for p in range(0, 5):
                for o in range(0, 5):
                    if tabulka[p][o] == upravenyText[i]:
                        index1.append(p)
                        index1.append(o)

                    elif tabulka[p][o] == upravenyText[i + 1]:
                        index2.append(p)
                        index2.append(o)

            if index1[1] == index2[1]:
                vys_sif_text.append(tabulka[(index1[0] - 1) % 5][index1[1]])
                vys_sif_text.append(tabulka[(index2[0] - 1) % 5][index2[1]])
            elif index1[0] == index2[0]:
                vys_sif_text.append(tabulka[index1[0]][(index1[1] - 1) % 5])
                vys_sif_text.append(tabulka[index2[0]][(index2[1] - 1) % 5])
            else:
                vys_sif_text.append(tabulka[index1[0]][index2[1]])
                vys_sif_text.append(tabulka[index2[0]][index1[1]])

            i += 2

        #########doplneni cisel a mezer do textu a vypsani klice, upraveneho textu a desifrovaneho textu###########
        for x in range(0, len(upravenyTextSMezery)):
            if upravenyTextSMezery[x] == ' ':
                vys_sif_text.insert(x, ' ')
            elif upravenyTextSMezery[x].isdigit():
                vys_sif_text.insert(x, upravenyTextSMezery[x])

        self.DESTEXT.setText(self.DESTEXT.text() + "\n" + "Upraveny text: ")
        for x in range(0, len(upravenyTextSMezery)):
            self.DESTEXT.setText(self.DESTEXT.text() + upravenyTextSMezery[x])

        self.DESTEXT.setText(self.DESTEXT.text() + "\n" + "Upraveny klic: ")
        for x in range(0, len(upravenyKlic)):
            self.DESTEXT.setText(self.DESTEXT.text() + upravenyKlic[x])

        self.DESTEXT.setText(self.DESTEXT.text() + "\n\nDesifrovany text:")
        for x in vys_sif_text:
            self.DESTEXT.setText(self.DESTEXT.text() + x)

    def show_popUpEmpty(self):
        msgbox = QMessageBox()
        msgbox.setWindowTitle("Textové pole je prázdné")
        msgbox.setText("Textove pole nesmí být prázdne")
        msgbox.setIcon(QMessageBox.Warning)
        msgbox.setStandardButtons(QMessageBox.Ok)

        x = msgbox.exec_()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.zasifruj.setText(_translate("MainWindow", "Zašifruj"))
        self.SifText.setPlaceholderText(_translate("MainWindow", "Zadejte text, který chcete zašifrovat"))
        self.klicSif.setPlaceholderText(_translate("MainWindow", "Zadejte klíč, který se použije k šifrování"))
        self.CZSIF.setText(_translate("MainWindow", "CZ"))
        self.ENSIF.setText(_translate("MainWindow", "EN"))
        self.POPIS03.setText(_translate("MainWindow", "Zašifrovaný text:"))
        self.POPIS02.setText(_translate("MainWindow", "Klíč:"))
        self.POPIS01.setText(_translate("MainWindow", "Text k šifrování:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Sifrovani), _translate("MainWindow", "Šifrování"))
        self.ENDEF.setText(_translate("MainWindow", "EN"))
        self.DESIFRUJ.setText(_translate("MainWindow", "Dešifruj"))
        self.CZDEGF.setText(_translate("MainWindow", "CZ"))
        self.POPIS003.setText(_translate("MainWindow", "Dešifrovaný text:"))
        self.POPIS001.setText(_translate("MainWindow", "Text k dešifrování:"))
        self.POPIS004.setText(_translate("MainWindow", "Klíč:"))
        self.DesifText.setPlaceholderText(_translate("MainWindow", "Zadejte text, který chcete zašifrovat, jako zástupný znak pro mezery užijte XMEZERAX"))
        self.KlicDes.setPlaceholderText(_translate("MainWindow", "Zadejte klíč, který se použije k dešifrování"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Desifruj), _translate("MainWindow", "Dešifrování"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
